name: Release

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: true

      # Enhanced cleanup to remove test artifacts
      - name: Clean workspace
        shell: bash
        run: |
          # Remove test coverage files
          rm -f *.out
          rm -f integration-coverage.out
          
          # Reset any changes
          git reset --hard HEAD
          
          # Clean untracked files
          git clean -fdx
          
          echo "Workspace cleaned successfully"

      - name: Install tools
        shell: bash
        run: make install-tools

      - name: Generate code
        shell: bash
        run: make generate

      # Verify no generated files were modified
      - name: Check git status
        shell: bash
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "::error::Generated files are out of date. Please run 'make generate' and commit changes."
            git status
            exit 1
          fi

      - name: Run tests
        shell: bash
        run: |
          # Run tests but discard coverage outputs
          make test > /dev/null 2>&1 || make test
          rm -f *.out

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --timeout 30m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: cmd/voyagerd/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/kolkov/voyagerd:${{ github.ref_name }}
            ghcr.io/kolkov/voyagerd:latest
          build-args: |
            VERSION=${{ github.ref_name }}