syntax = "proto3";

package voyager.v1;

option go_package = "github.com/kolkov/voyager/gen/voyager/v1;voyagerv1";

service Discovery {
  rpc Register(Registration) returns (Response);
  rpc Deregister(InstanceID) returns (Response);
  rpc Discover(ServiceQuery) returns (ServiceList);
  rpc HealthCheck(HealthRequest) returns (HealthResponse);
}

message Registration {
  string service_name = 1;
  string instance_id = 2;
  string address = 3;
  int32 port = 4;
  map<string, string> metadata = 5;
}

message InstanceID {
  string service_name = 1;
  string instance_id = 2;
}

message ServiceQuery {
  string service_name = 1;
  bool healthy_only = 2;
}

message ServiceList {
  repeated Registration instances = 1;
}

message HealthRequest {
  string service_name = 1;
  string instance_id = 2;
}

message HealthResponse {
  enum Status {
    UNKNOWN = 0;
    HEALTHY = 1;
    UNHEALTHY = 2;
  }
  Status status = 1;
}

message Response {
  bool success = 1;
  string error = 2;
}